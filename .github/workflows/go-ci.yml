name: Go CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:

  # Runs lint and test
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13

    - name: Install golint
      run: go get -u golang.org/x/lint/golint

    - name: Make
      run: make

    - name: Test
      run: make test

  # Builds a binary and publishes it as an artifact
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.13

    - name: Make
      run: make

    - uses: actions/upload-artifact@v2
      with:
        name: binary
        path: bin/mw

  # Fetches and installs MediaWiki, caching it for further runs
  fetch-mw:
    runs-on: ubuntu-latest
    steps:

    - name: Cache MediaWiki
      id: cache-mediawiki
      uses: actions/cache@v2
      with:
        path: mediawiki
        key: ${{ runner.os }}-mediawiki
    - name: Fetch MediaWiki code
      if: steps.cache-mediawiki.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: wikimedia/mediawiki
        path: mediawiki
    - name: Do a composer install
      if: steps.cache-mediawiki.outputs.cache-hit != 'true'
      run: composer install --no-progress --ansi --working-dir mediawiki

  collect-integration-tests:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v2
          - run: ls ./.github/workflows/go-ci-integration | jq -R -s -c 'split("\n")[:-1]'
          - id: output-data
            run: echo "::set-output name=matrix::$(ls ./.github/workflows/go-ci-integration | jq -R -s -c 'split("\n")[:-1]')"

      outputs:
          matrix: ${{ steps.output-data.outputs.matrix }}

  # Runs a series of integration tests
  integration-tests:
    needs: [ build, fetch-mw, collect-integration-tests ]
    runs-on: ${{ matrix.os }}
#ubuntu-18.04
    strategy:
        fail-fast: false
        matrix:
            docker_version:
            - 20.10
            - 19.03
            - 18.09
            test: ${{ fromJson(needs.collect-integration-tests.outputs.matrix )}}
            include:
            - docker_version: 20.10
              os: ubuntu-latest
            - docker_version: 19.03
              os: ubuntu-latest
            - docker_version: 18.09
              os: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

      # Get cached or fresh MediaWiki
    - name: Cache MediaWiki
      id: cache-mediawiki
      uses: actions/cache@v2
      with:
        path: mediawiki
        key: ${{ runner.os }}-mediawiki
    - name: Fetch MediaWiki code
      if: steps.cache-mediawiki.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: wikimedia/mediawiki
        path: mediawiki
    - name: Do a composer install
      if: steps.cache-mediawiki.outputs.cache-hit != 'true'
      run: composer install --no-progress --ansi --working-dir mediawiki

      # Get the executable binary to test
    - uses: actions/download-artifact@master
      with:
        name: binary
        path: .
    - run: chmod +x ./mw

    - name: Setup Docker
      uses: docker-practice/actions-setup-docker@master
      with:
        docker_version: ${{ matrix.docker_version }}
        docker_channel: stable

      # This is a hack to work around https://github.com/jwilder/docker-gen/issues/315.
      # Support ticket is open with Github to make sure that this is okay.
    - name: Update Docker cgroup and restart service
      run: |
        sudo rm /etc/docker/daemon.json
        sudo service docker restart

    - name: Output docker versions
      run: |
        docker version
        docker-compose version

      # Run the test
    - run: ./.github/workflows/go-ci-integration/${{ matrix.test }}

