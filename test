#!/usr/bin/env -S -i /bin/bash
set -e
set -u
set -x

BASE="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

export PATH="$PATH:/usr/local/bin/"
export HOME="$(echo ~)"

INSTALL_DEPS="curl make python3-dev libffi-dev gcc libc-dev cargo"

echo "installing dependencies"
sudo apt-get update
DEBIAN_FRONTEND=noninteractive sudo apt-get -y install $INSTALL_DEPS

# Docker-compose should be installed
if ! command -v docker-compose &> /dev/null
then
  echo "installing docker-compose"
  curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
  chmod +x /usr/local/bin/docker-compose
fi

# Golang should be installed
if ! command -v go &> /dev/null
then
  echo "installing golang"
  
  pushd /tmp
  curl -q -o go1.16.4.linux-amd64.tar.gz https://dl.google.com/go/go1.16.4.linux-amd64.tar.gz
  tar -xvf go1.16.4.linux-amd64.tar.gz
  mv go /usr/local/bin

  export GOROOT=/usr/local/bin/go
  export GOPATH=$HOME/go
  export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
  popd
fi

export PATH="$PATH:$HOME/go/bin"

title() {
	echo
	echo "test: $1..."
}

assert() {
	actual="$1"
	expected="${2:-}"
	printf "\"${actual}\" == \"${expected}\"\n"
	test "$actual" = "$expected"
}

# TODO add mwdd commands

#build the cli executable
title "Build mwcli"
{
  make
  mv $BASE/bin/cli $BASE/bin/mw
}

# get mediawiki
title "Clone Mediawiki core"
{
  git clone https://gerrit.wikimedia.org/r/mediawiki/core --depth 1
  cd core
}

title "Create .env file"
{
  touch .env
  echo "MW_DOCKER_UID=$(id -u)
  MW_DOCKER_GID=$(id -g)
  XDEBUG_CONFIG=""">> .env
}

title "Create config.json file"
{
  mkdir ~/.mwcli
  echo '{"dev_mode":"docker"}' > ~/.mwcli/config.json
}

title "Check Status"
{
  $BASE/bin/mw docker -v2 status
}

title "Start Mediawiki"
{
  $BASE/bin/mw docker -v2 start -y

  # check we can go to localhost
  CHECK_RESULT="$(curl -s -L -N http://localhost:8080)"
  echo $CHECK_RESULT
  echo $CHECK_RESULT | grep -q "<title>MediaWiki</title>"
}

# TODO fixme (complains about no TTY)
# title "Exec into the container"
# {
#   $BASE/bin/mw docker -v2 exec mediawiki -- ls
# }

title "Stop Mediawiki"
{
  $BASE/bin/mw docker -v2 stop
}

title "Destroy Mediawiki"
{
  $BASE/bin/mw docker -v2 destroy
  docker ps | wc -l | grep -q "1"
}

title "Print the .env file path"
{
  $BASE/bin/mw docker -v2 env where
}

title "List the .env file contents"
{
  $BASE/bin/mw docker -v2 env list
}

title "Manipulate the .env file"
{
  $BASE/bin/mw docker -v2 env set TEST_VAR "test"
  testvar="$($BASE/bin/mw docker env get TEST_VAR)"
  assert $testvar "test"

  $BASE/bin/mw docker -v2 env delete TEST_VAR
  testvar="$($BASE/bin/mw docker env get TEST_VAR)"
  assert $testvar ""
}



